<%# index.ejs
  #
  # TODO: document
  # TODO: fix table styling
  %>


<%# locals:
  # ExistingItems: [] -- array of existing survey-tracker items in dynamodb
%>

<!doctype html>
<head>
  <title>Survey Tracker - Home</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" crossorigin="anonymous">
</head>
<body>
  <!-- NAVBAR GOES HERE -->
  <% include ./ejs_partials/navbar.ejs %>

  <div id="surveys-app">

    <table class="table">
      <thead>
        <tr>
          <th>#</th>
          <th>Survey Name</th>
          <th>Survey ID</th>
          <th>Subject Phone #</th>
          <th>Notes (optional)</th>
        </tr>
      </thead>
      <tbody>
        <tr v-for='(s,si) in surveys'>
          <td>
            <button type='button' class='btn btn-outline-danger btn-sm'
              
              :title='`Untrack survey #${si+1} (${s.qualtricsId})`'
              @click.once='untrackSurvey(s.qualtricsId)'
            >
              &times;
            </button>
            {{ si+1 }}
          </td>
          <td> {{ s.name }} </td>
          <td> {{ s.qualtricsId }} </td>
          <td> {{ s.subjectPhone }} </td>
          <td> {{ s.notes }} </td>
        </tr>

        <tr>
          <td>
            {{ surveys.length+1 }}
          </td>

          <td>
            <button type='button' class='btn btn-outline-success btn-sm'
              @click.once='trackNewSurvey()'
            >
              Track
            </button>
          </td>

          <td>
            <input type="text" v-model='newSurvey.qualtricsId'>
          </td>

          <td>
            <input type="text"
              v-model='newSurvey.subjectPhone'
              @input='validateNewPhone()'
            >
          </td>

          <td>
            <input type="text" v-model='newSurvey.notes'>
          </td>
        </tr>
      </tbody>
    </table>

  </div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ" crossorigin="anonymous"></script> 
<script src="https://cdn.jsdelivr.net/npm/vue@2.6.14"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.4/axios.min.js" integrity="sha512-lTLt+W7MrmDfKam+r3D2LURu0F47a3QaW5nF0c6Hl0JDZ57ruei+ovbg7BrZ+0bjVJ5YgzsAWE+RreERbpPE1g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
const APP = new Vue({
  el: '#surveys-app',
  data: {
    newSurvey: {
      qualtricsId: '',
      subjectPhone: '',
      notes: ''
    },

    surveys: [{
      qualtricsId: 'SV_whatever',
      subjectPhone: '(954)389-4091',
      notes: 'yoyoyo'
    }],

    settings: {

    }
  },
  methods: {
    async refresh() {

    },

    async trackNewSurvey() {

    },

    /**
     * Used to validate phone number on input.
     * */
    validateNewPhone() {
      let phone = this.newSurvey.subjectPhone.replace(/[^0-9]/g, '');

      if (phone.length > 0 && phone.length <= 3) {
        phone = '(' + phone;
      }
      else if ( phone.length > 3 && phone.length <= 6 ) {
        phone = `(${phone.substring(0,3)})${phone.substring(3,6)}`;
      }
      else if ( phone.length > 6 ) {
        phone = `(${phone.substring(0,3)})${phone.substring(3,6)}-${phone.substring(6,10)}`;
      }
      
      this.newSurvey.subjectPhone = phone;
    }
  },
  mounted() {
    this.refresh();
  }
});
</script>
</body>
